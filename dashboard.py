# -*- coding: utf-8 -*-
"""dashboard

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bRmiL64wjIUH3_v2Ama7ZdfEC13rKnlf
"""

pip install streamlit

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from io import BytesIO

# Configuración inicial de Streamlit
st.title("Dashboard de Gráficas: Compra/Venta vs Pbol")
st.sidebar.header("Configuración")

# Subir archivo Excel
uploaded_file = st.sidebar.file_uploader("Sube tu archivo Excel", type=["xlsx"])

if uploaded_file:
    # Leer las hojas del archivo Excel
    sheet_names = ['EPSG - Celsia', 'ENDG', 'EPMG', 'ISGG']
    for sheet in sheet_names:
        try:
            # Leer los datos de la hoja actual
            data = pd.read_excel(uploaded_file, sheet_name=sheet)

            # Validar que las columnas necesarias existan
            required_columns = ['Filedate', 'Precio VENTAS', 'Precio COMPRAS', 'Prom.Bolsa.Nac']
            if all(col in data.columns for col in required_columns):
                file_date = data['Filedate']
                precio_ventas = data['Precio VENTAS']
                precio_compras = data['Precio COMPRAS']
                prom_bolsa_nac = data['Prom.Bolsa.Nac']

                # Crear la gráfica
                fig, ax = plt.subplots(figsize=(12, 6))
                ax.scatter(file_date, precio_ventas, color='green', label='Precio VENTAS', alpha=0.3)
                ax.scatter(file_date, precio_compras, color='red', label='Precio COMPRAS', alpha=0.3)
                ax.plot(file_date, prom_bolsa_nac, color='black', label='Prom. Bolsa.Nac', linewidth=0.5)

                # Configurar etiquetas y título
                ax.set_xlabel('FileDate')
                ax.set_ylabel('Precios')
                ax.set_title(f'Ratio Compra/Venta vs Pbol - {sheet}')
                ax.legend()
                ax.grid()
                plt.xticks(rotation=45)

                # Mostrar la gráfica en Streamlit
                st.subheader(f"Gráfica para la hoja: {sheet}")
                st.pyplot(fig)
            else:
                st.warning(f"La hoja '{sheet}' no contiene las columnas necesarias: {required_columns}")
        except Exception as e:
            st.error(f"Error procesando la hoja '{sheet}': {e}")
else:
    st.info("Por favor, sube un archivo Excel para comenzar.")